From e4791c63fd7b3f1c2274d1e1d9da6793a7b4b2d6 Mon Sep 17 00:00:00 2001
From: necromonger <necromonger@Necromonger.UNIVERSE>
Date: Sat, 22 Jan 2011 18:55:31 +0300
Subject: [PATCH 197/226] Japanese comments in ./src/map/clif.c resurrected

---
 src/map/clif.c | 607 +++++++++++++++++++++++++++++----------------------------
 1 file changed, 306 insertions(+), 301 deletions(-)

diff --git a/src/map/clif.c b/src/map/clif.c
index e0490d9..1269afb 100644
--- a/src/map/clif.c
+++ b/src/map/clif.c
@@ -140,7 +140,7 @@ int  map_fd;
 char talkie_mes[80];
 
 /*==========================================
- * map�I��ip�ݒ�
+ * map鯖のip設定
  *------------------------------------------
  */
 void clif_setip (char *ip)
@@ -153,7 +153,7 @@ void clif_setip (char *ip)
 }
 
 /*==========================================
- * map�I��port�ݒ�
+ * map鯖のport設定
  *------------------------------------------
  */
 void clif_setport (int port)
@@ -162,7 +162,7 @@ void clif_setport (int port)
 }
 
 /*==========================================
- * map�I��ip�ǂݏo��
+ * map鯖のip読み出し
  *------------------------------------------
  */
 in_addr_t clif_getip (void)
@@ -171,7 +171,7 @@ in_addr_t clif_getip (void)
 }
 
 /*==========================================
- * map�I��port�ǂݏo��
+ * map鯖のport読み出し
  *------------------------------------------
  */
 int clif_getport (void)
@@ -180,7 +180,7 @@ int clif_getport (void)
 }
 
 /*==========================================
- *
+ * Counts connected players.
  *------------------------------------------
  */
 int clif_countusers (void)
@@ -199,7 +199,7 @@ int clif_countusers (void)
 }
 
 /*==========================================
- * �S�Ă�client�ɑ΂���func()��s
+ * 全てのclientに対してfunc()実行
  *------------------------------------------
  */
 int clif_foreachclient (int (*func) (struct map_session_data *, va_list), ...)
@@ -234,7 +234,7 @@ static char *clif_validate_chat (struct map_session_data *sd, int type,
                                  char **message, size_t *message_len);
 
 /*==========================================
- * clif_send��AREA*�w�莞�p
+ * clif_sendでAREA*指定時用
  *------------------------------------------
  */
 int clif_send_sub (struct block_list *bl, va_list ap)
@@ -356,7 +356,7 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
 
     switch (type)
     {
-        case ALL_CLIENT:       // �S�N���C�A���g�ɑ��M
+        case ALL_CLIENT:       
             if (RBUFW (buf, 0) >= 0x220)
                 break;
 
@@ -373,7 +373,7 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
                 }
             }
             break;
-        case ALL_SAMEMAP:      // �����}�b�v�̑S�N���C�A���g�ɑ��M
+        case ALL_SAMEMAP:      // All players on the same map
             nullpo_retr (0, bl);
             if (RBUFW (buf, 0) >= 0x220)
                 break;
@@ -434,17 +434,17 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
             }
             break;
 
-        case PARTY_AREA:       // �������ʓ��̑S�p�[�e�B�[�����o�ɑ��M
-        case PARTY_AREA_WOS:   // �����ȊO�̓������ʓ��̑S�p�[�e�B�[�����o�ɑ��M
+        case PARTY_AREA:       // 同じ画面内の全パーティーメンバに送信
+        case PARTY_AREA_WOS:   // 自分以外の同じ画面内の全パーティーメンバに送信
             nullpo_retr (0, bl);
             x0 = bl->x - AREA_SIZE;
             y0 = bl->y - AREA_SIZE;
             x1 = bl->x + AREA_SIZE;
             y1 = bl->y + AREA_SIZE;
-        case PARTY:            // �S�p�[�e�B�[�����o�ɑ��M
-        case PARTY_WOS:        // �����ȊO�̑S�p�[�e�B�[�����o�ɑ��M
-        case PARTY_SAMEMAP:    // �����}�b�v�̑S�p�[�e�B�[�����o�ɑ��M
-        case PARTY_SAMEMAP_WOS:    // �����ȊO�̓����}�b�v�̑S�p�[�e�B�[�����o�ɑ��M
+        case PARTY:            // 全パーティーメンバに送信
+        case PARTY_WOS:        // 自分以外の全パーティーメンバに送信
+        case PARTY_SAMEMAP:    // 同じマップの全パーティーメンバに送信
+        case PARTY_SAMEMAP_WOS:    // 自分以外の同じマップの全パーティーメンバに送信
             nullpo_retr (0, bl);
             if (bl->type == BL_PC)
             {
@@ -470,7 +470,7 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
                                                     || type ==
                                                     PARTY_AREA_WOS))
                             continue;
-                        if (type != PARTY && type != PARTY_WOS && bl->m != sd->bl.m)    // �}�b�v�`�F�b�N
+                        if (type != PARTY && type != PARTY_WOS && bl->m != sd->bl.m)    // マップチェック
                             continue;
                         if ((type == PARTY_AREA || type == PARTY_AREA_WOS) &&
                             (sd->bl.x < x0 || sd->bl.y < y0 ||
@@ -587,7 +587,7 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
                                                     || type ==
                                                     GUILD_AREA_WOS))
                             continue;
-                        if (type != GUILD && type != GUILD_WOS && bl->m != sd->bl.m)    // �}�b�v�`�F�b�N
+                        if (type != GUILD && type != GUILD_WOS && bl->m != sd->bl.m)    // マップチェック
                             continue;
                         if ((type == GUILD_AREA || type == GUILD_AREA_WOS) &&
                             (sd->bl.x < x0 || sd->bl.y < y0 ||
@@ -605,7 +605,7 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
 
         default:
             if (battle_config.error_log)
-                printf ("clif_send �܂�����ĂȂ����[\n");
+                printf ("clif_send まだ作ってないよー\n");
             return -1;
     }
 
@@ -613,8 +613,9 @@ int clif_send (unsigned char *buf, int len, struct block_list *bl, int type)
 }
 
 //
-// �p�P�b�g����đ��M
+// パケット作って送信
 //
+
 /*==========================================
  *
  *------------------------------------------
@@ -1013,7 +1014,7 @@ static int clif_set007b (struct map_session_data *sd, unsigned char *buf)
 }
 
 /*==========================================
- * �N���X�`�F���W type��Mob�̏ꍇ��1�ő���0�H
+ * クラスチェンジ typeはMobの場合は1で他は0？ 
  *------------------------------------------
  */
 int clif_class_change (struct block_list *bl, int class, int type)
@@ -1078,7 +1079,7 @@ int clif_mob_equip (struct mob_data *md, int nameid)
 }
 
 /*==========================================
- * MOB�\��1
+ * MOB表示1 
  *------------------------------------------
  */
 static int clif_mob0078 (struct mob_data *md, unsigned char *buf)
@@ -1145,7 +1146,7 @@ static int clif_mob0078 (struct mob_data *md, unsigned char *buf)
 }
 
 /*==========================================
- * MOB�\��2
+ * MOB表示2 
  *------------------------------------------
  */
 static int clif_mob007b (struct mob_data *md, unsigned char *buf)
@@ -2058,7 +2059,7 @@ int clif_itemlist (struct map_session_data *sd)
         {
             WBUFW (buf, n * 18 + 12) = 0x8000;
             if (sd->status.inventory[i].equip)
-                arrow = i;      // ���łɖ���`�F�b�N
+                arrow = i;      // ついでに矢装備チェック 
         }
         else
             WBUFW (buf, n * 18 + 12) = 0;
@@ -2160,7 +2161,7 @@ int clif_equiplist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v�������ɗa���Ă�����Օi&���W�i���X�g
+ * カプラさんに預けてある消耗品&収集品リスト 
  *------------------------------------------
  */
 int clif_storageitemlist (struct map_session_data *sd, struct storage *stor)
@@ -2210,7 +2211,7 @@ int clif_storageitemlist (struct map_session_data *sd, struct storage *stor)
 }
 
 /*==========================================
- * �J�v�������ɗa���Ă��鑕��X�g
+ * カプラさんに預けてある装備リスト 
  *------------------------------------------
  */
 int clif_storageequiplist (struct map_session_data *sd, struct storage *stor)
@@ -2426,8 +2427,8 @@ int clif_guildstorageequiplist (struct map_session_data *sd,
 }
 
 /*==========================================
- * �X�e�[�^�X�𑗂�����
- * �\�����p�����͂��̒��Ōv�Z���đ���
+ * ステータスを送りつける 
+ * 表示専用数字はこの中で計算して送る 
  *------------------------------------------
  */
 int clif_updatestatus (struct map_session_data *sd, int type)
@@ -2547,7 +2548,7 @@ int clif_updatestatus (struct map_session_data *sd, int type)
             WFIFOL (fd, 4) = pc_nextjobexp (sd);
             break;
 
-            // 00be �I��
+            // 00be 終了 
         case SP_USTR:
         case SP_UAGI:
         case SP_UVIT:
@@ -2560,7 +2561,7 @@ int clif_updatestatus (struct map_session_data *sd, int type)
             len = 5;
             break;
 
-            // 013a �I��
+            // 013a 終了 
         case SP_ATTACKRANGE:
             WFIFOW (fd, 0) = 0x13a;
             WFIFOW (fd, 2) = (sd->attack_spell_override)
@@ -2568,7 +2569,7 @@ int clif_updatestatus (struct map_session_data *sd, int type)
             len = 4;
             break;
 
-            // 0141 �I��
+            // 0141 終了 
         case SP_STR:
             WFIFOW (fd, 0) = 0x141;
             WFIFOL (fd, 2) = type;
@@ -2839,7 +2840,7 @@ int clif_initialstatus (struct map_session_data *sd)
 }
 
 /*==========================================
- *���
+ * 矢装備 
  *------------------------------------------
  */
 int clif_arrowequip (struct map_session_data *sd, int val)
@@ -2854,7 +2855,7 @@ int clif_arrowequip (struct map_session_data *sd, int val)
     fd = sd->fd;
 
     WFIFOW (fd, 0) = 0x013c;
-    WFIFOW (fd, 2) = val + 2;   //���̃A�C�e��ID
+    WFIFOW (fd, 2) = val + 2;   //矢のアイテムID 
 
     WFIFOSET (fd, packet_len_table[0x013c]);
 
@@ -2882,7 +2883,7 @@ int clif_arrow_fail (struct map_session_data *sd, int type)
 }
 
 /*==========================================
- *
+ * 作成可能 矢リスト送信 
  *------------------------------------------
  */
 int clif_statusupack (struct map_session_data *sd, int type, int ok, int val)
@@ -2964,7 +2965,7 @@ int clif_misceffect (struct block_list *bl, int type)
 }
 
 /*==========================================
- * �\���I�v�V�����ύX
+ * 表示オプション変更 
  *------------------------------------------
  */
 int clif_changeoption (struct block_list *bl)
@@ -3003,7 +3004,7 @@ int clif_changeoption (struct block_list *bl)
     else
         clif_send (buf, packet_len_table[0x119], bl, AREA);
 
-    // �A�C�R���̕\��
+     // アイコンの表示 
     for (i = 0; i < sizeof (omask) / sizeof (omask[0]); i++)
     {
         if (option & omask[i])
@@ -3086,7 +3087,7 @@ int clif_createchat (struct map_session_data *sd, int fail)
  */
 int clif_dispchat (struct chat_data *cd, int fd)
 {
-    char buf[128];              // �ő�title(60�o�C�g)+17
+    char buf[128];              // 最大title(60バイト)+17 
 
     if (cd == NULL || *cd->owner == NULL)
         return 1;
@@ -3113,13 +3114,13 @@ int clif_dispchat (struct chat_data *cd, int fd)
 }
 
 /*==========================================
- * chat�̏��ԕύX����
- * �O���̐l�p�Ɩ��߃R�[�h(d7->df)���Ⴄ����
+ * chatの状態変更成功 
+ * 外部の人用と命令コード(d7->df)が違うだけ 
  *------------------------------------------
  */
 int clif_changechatstatus (struct chat_data *cd)
 {
-    char buf[128];              // �ő�title(60�o�C�g)+17
+    char buf[128];              // 最大title(60バイト)+17 
 
     if (cd == NULL || cd->usersd[0] == NULL)
         return 1;
@@ -3280,7 +3281,7 @@ int clif_leavechat (struct chat_data *cd, struct map_session_data *sd)
 }
 
 /*==========================================
- * ���������v������
+ * 取り引き要請受け 
  *------------------------------------------
  */
 int clif_traderequest (struct map_session_data *sd, char *name)
@@ -3300,7 +3301,7 @@ int clif_traderequest (struct map_session_data *sd, char *name)
 }
 
 /*==========================================
- * ���������v������
+ * 取り引き要求応答 
  *------------------------------------------
  */
 int clif_tradestart (struct map_session_data *sd, int type)
@@ -3319,7 +3320,7 @@ int clif_tradestart (struct map_session_data *sd, int type)
 }
 
 /*==========================================
- * �����������̃A�C�e���ǉ�
+ * 相手方からのアイテム追加 
  *------------------------------------------
  */
 int clif_tradeadditem (struct map_session_data *sd,
@@ -3406,7 +3407,7 @@ int clif_tradeadditem (struct map_session_data *sd,
 }
 
 /*==========================================
- * �A�C�e���ǉ����/���s
+ * アイテム追加成功/失敗 
  *------------------------------------------
  */
 int clif_tradeitemok (struct map_session_data *sd, int index, int amount,
@@ -3429,7 +3430,7 @@ int clif_tradeitemok (struct map_session_data *sd, int index, int amount,
 }
 
 /*==========================================
- * ��������ok����
+ * 取り引きok押し 
  *------------------------------------------
  */
 int clif_tradedeal_lock (struct map_session_data *sd, int fail)
@@ -3448,7 +3449,7 @@ int clif_tradedeal_lock (struct map_session_data *sd, int fail)
 }
 
 /*==========================================
- * �����������L�����Z�������܂���
+ * 取り引きがキャンセルされました 
  *------------------------------------------
  */
 int clif_tradecancelled (struct map_session_data *sd)
@@ -3466,7 +3467,7 @@ int clif_tradecancelled (struct map_session_data *sd)
 }
 
 /*==========================================
- * ������������
+ * 取り引き完了 
  *------------------------------------------
  */
 int clif_tradecompleted (struct map_session_data *sd, int fail)
@@ -3485,7 +3486,7 @@ int clif_tradecompleted (struct map_session_data *sd, int fail)
 }
 
 /*==========================================
- * �J�v���q�ɂ̃A�C�e�������X�V
+ * カプラ倉庫のアイテム数を更新 
  *------------------------------------------
  */
 int clif_updatestorageamount (struct map_session_data *sd,
@@ -3507,7 +3508,7 @@ int clif_updatestorageamount (struct map_session_data *sd,
 }
 
 /*==========================================
- * �J�v���q�ɂɃA�C�e�����ǉ����
+ * カプラ倉庫にアイテムを追加する 
  *------------------------------------------
  */
 int clif_storageitemadded (struct map_session_data *sd, struct storage *stor,
@@ -3665,7 +3666,7 @@ int clif_guildstorageitemadded (struct map_session_data *sd,
 }
 
 /*==========================================
- * �J�v���q�ɂ����A�C�e�������苎��
+ * カプラ倉庫からアイテムを取り去る 
  *------------------------------------------
  */
 int clif_storageitemremoved (struct map_session_data *sd, int index,
@@ -3685,7 +3686,7 @@ int clif_storageitemremoved (struct map_session_data *sd, int index,
 }
 
 /*==========================================
- * �J�v���q�ɂ�����
+ * カプラ倉庫を閉じる 
  *------------------------------------------
  */
 int clif_storageclose (struct map_session_data *sd)
@@ -3713,10 +3714,10 @@ clif_changelook_accessories (struct block_list *bl,
 }
 
 //
-// callback�n ?
+// callback 系 ?
 //
 /*==========================================
- * PC�\��
+ * PC表示 
  *------------------------------------------
  */
 void clif_getareachar_pc (struct map_session_data *sd,
@@ -3765,7 +3766,7 @@ void clif_getareachar_pc (struct map_session_data *sd,
 }
 
 /*==========================================
- * NPC�\��
+ * NPC表示 
  *------------------------------------------
  */
 void clif_getareachar_npc (struct map_session_data *sd, struct npc_data *nd)
@@ -3789,7 +3790,7 @@ void clif_getareachar_npc (struct map_session_data *sd, struct npc_data *nd)
 }
 
 /*==========================================
- * �ړ����~
+ * 移動停止 
  *------------------------------------------
  */
 int clif_movemob (struct mob_data *md)
@@ -3809,7 +3810,7 @@ int clif_movemob (struct mob_data *md)
 }
 
 /*==========================================
- * �����X�^�[�̈ʒu�C��
+ * モンスターの位置修正 
  *------------------------------------------
  */
 int clif_fixmobpos (struct mob_data *md)
@@ -3834,7 +3835,7 @@ int clif_fixmobpos (struct mob_data *md)
 }
 
 /*==========================================
- * PC�̈ʒu�C��
+ * PCの位置修正 
  *------------------------------------------
  */
 int clif_fixpcpos (struct map_session_data *sd)
@@ -3860,7 +3861,7 @@ int clif_fixpcpos (struct map_session_data *sd)
 }
 
 /*==========================================
- * �ʏ��U���G�t�F�N�g���_���[�W
+ * 通常攻撃エフェクト＆ダメージ 
  *------------------------------------------
  */
 int clif_damage (struct block_list *src, struct block_list *dst,
@@ -3967,7 +3968,7 @@ void clif_getareachar_item (struct map_session_data *sd,
 }
 
 /*==========================================
- * �ꏊ�X�L���G�t�F�N�g�����E�ɓ���
+ * 場所スキルエフェクトが視界に入る 
  *------------------------------------------
  */
 int clif_getareachar_skillunit (struct map_session_data *sd,
@@ -3991,29 +3992,29 @@ int clif_getareachar_skillunit (struct map_session_data *sd,
     WFIFOW (fd, 12) = unit->bl.y;
     WFIFOB (fd, 14) = unit->group->unit_id;
     WFIFOB (fd, 15) = 1;
-    WFIFOL (fd, 15 + 1) = 0;    //1-4���ׂ�����Œ�
-    WFIFOL (fd, 15 + 5) = 0;    //5-8���ׂ�����Œ�
-    //9-12�}�b�v���Ƃň�����77-80�Ƃ͂܂��Ⴄ4�o�C�g�̂��Ȃ��傫�Ȑ���
-    WFIFOL (fd, 15 + 13) = unit->bl.y - 0x12;   //13-16���j�b�g��Y��W-18��ۂ�(Y:17��FF FF FF FF)
-    WFIFOL (fd, 15 + 17) = 0x004f37dd;  //17-20���ׂ�����Œ�
-    WFIFOL (fd, 15 + 21) = 0x0012f674;  //21-24���ׂ�����Œ�
-    WFIFOL (fd, 15 + 25) = 0x0012f664;  //25-28���ׂ�����Œ�
-    WFIFOL (fd, 15 + 29) = 0x0012f654;  //29-32���ׂ�����Œ�
-    WFIFOL (fd, 15 + 33) = 0x77527bbc;  //33-36���ׂ�����Œ�
+    WFIFOL (fd, 15 + 1) = 0;    //1-4調べた限り固定
+    WFIFOL (fd, 15 + 5) = 0;    //5-8調べた限り固定 
+     //9-12マップごとで一定の77-80とはまた違う4バイトのかなり大きな数字 
+    WFIFOL (fd, 15 + 13) = unit->bl.y - 0x12;   //13-16ユニットのY座標-18っぽい(Y:17でFF FF FF FF)
+    WFIFOL (fd, 15 + 17) = 0x004f37dd;  //17-20調べた限り固定 
+    WFIFOL (fd, 15 + 21) = 0x0012f674;  //21-24調べた限り固定 
+    WFIFOL (fd, 15 + 25) = 0x0012f664;  //25-28調べた限り固定 
+    WFIFOL (fd, 15 + 29) = 0x0012f654;  //29-32調べた限り固定 
+    WFIFOL (fd, 15 + 33) = 0x77527bbc;  //33-36調べた限り固定 
     //37-39
-    WFIFOB (fd, 15 + 40) = 0x2d;    //40���ׂ�����Œ�
-    WFIFOL (fd, 15 + 41) = 0;   //41-44���ׂ����0�Œ�
-    WFIFOL (fd, 15 + 45) = 0;   //45-48���ׂ����0�Œ�
-    WFIFOL (fd, 15 + 49) = 0;   //49-52���ׂ����0�Œ�
-    WFIFOL (fd, 15 + 53) = 0x0048d919;  //53-56���ׂ�����Œ�
-    WFIFOL (fd, 15 + 57) = 0x0000003e;  //57-60���ׂ�����Œ�
-    WFIFOL (fd, 15 + 61) = 0x0012f66c;  //61-64���ׂ�����Œ�
+    WFIFOB (fd, 15 + 40) = 0x2d;    //40調べた限り固定 
+    WFIFOL (fd, 15 + 41) = 0;   //41-44調べた限り0固定 
+    WFIFOL (fd, 15 + 45) = 0;   //45-48調べた限り0固定 
+    WFIFOL (fd, 15 + 49) = 0;   //49-52調べた限り0固定 
+    WFIFOL (fd, 15 + 53) = 0x0048d919;  //53-56調べた限り固定 
+    WFIFOL (fd, 15 + 57) = 0x0000003e;  //57-60調べた限り固定 
+    WFIFOL (fd, 15 + 61) = 0x0012f66c;  //61-64調べた限り固定 
     //65-68
     //69-72
     if (bl)
-        WFIFOL (fd, 15 + 73) = bl->y;   //73-76�p�҂�Y��W
-    WFIFOL (fd, 15 + 77) = unit->bl.m;  //77-80�}�b�vID���Ȃ��H���Ȃ�2�o�C�g�ő��肻���Ȑ���
-    WFIFOB (fd, 15 + 81) = 0xaa;    //81�I�[����0xaa
+        WFIFOL (fd, 15 + 73) = bl->y;   //73-76術者のY座標 
+    WFIFOL (fd, 15 + 77) = unit->bl.m;  //77-80マップIDかなぁ？かなり2バイトで足りそうな数字 
+    WFIFOB (fd, 15 + 81) = 0xaa;    //81終端文字0xaa 
 
     /*  Graffiti [Valaris]  */
     if (unit->group->unit_id == 0xb0)
@@ -4031,7 +4032,7 @@ int clif_getareachar_skillunit (struct map_session_data *sd,
 }
 
 /*==========================================
- * �ꏊ�X�L���G�t�F�N�g�����E���������
+ * 場所スキルエフェクトが視界から消える 
  *------------------------------------------
  */
 int clif_clearchar_skillunit (struct skill_unit *unit, int fd)
@@ -4283,7 +4284,7 @@ int clif_skillinfo (struct map_session_data *sd, int skillid, int type,
 }
 
 /*==========================================
- * �X�L�����X�g�𑗐M����
+ * スキルリストを送信する 
  *------------------------------------------
  */
 int clif_skillinfoblock (struct map_session_data *sd)
@@ -4326,7 +4327,7 @@ int clif_skillinfoblock (struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�L�������U���ʒm
+ * スキル割り振り通知 
  *------------------------------------------
  */
 int clif_skillup (struct map_session_data *sd, int skill_num)
@@ -4357,7 +4358,7 @@ int clif_skillup (struct map_session_data *sd, int skill_num)
 }
 
 /*==========================================
- * �X�L���r���G�t�F�N�g�𑗐M����
+ * キル詠唱エフェクトを送信する 
  *------------------------------------------
  */
 int clif_skillcasting (struct block_list *bl,
@@ -4370,9 +4371,9 @@ int clif_skillcasting (struct block_list *bl,
     WBUFL (buf, 6) = dst_id;
     WBUFW (buf, 10) = dst_x;
     WBUFW (buf, 12) = dst_y;
-    WBUFW (buf, 14) = skill_num;    //���@�r���X�L��
-    WBUFL (buf, 16) = skill_get_pl (skill_num); //����
-    WBUFL (buf, 20) = casttime; //skill�r������
+    WBUFW (buf, 14) = skill_num;    //魔法詠唱スキル 
+    WBUFL (buf, 16) = skill_get_pl (skill_num); //属性 
+    WBUFL (buf, 20) = casttime; //skill詠唱時間 
     clif_send (buf, packet_len_table[0x13e], bl, AREA);
 
     return 0;
@@ -4396,7 +4397,7 @@ int clif_skillcastcancel (struct block_list *bl)
 }
 
 /*==========================================
- * �X�L���r�����s
+ * スキル詠唱失敗 
  *------------------------------------------
  */
 int clif_skill_fail (struct map_session_data *sd, int skill_id, int type,
@@ -4425,7 +4426,7 @@ int clif_skill_fail (struct map_session_data *sd, int skill_id, int type,
 }
 
 /*==========================================
- * �X�L���U���G�t�F�N�g���_���[�W
+ * スキル攻撃エフェクト＆ダメージ 
  *------------------------------------------
  */
 int clif_skill_damage (struct block_list *src, struct block_list *dst,
@@ -4469,7 +4470,7 @@ int clif_skill_damage (struct block_list *src, struct block_list *dst,
 }
 
 /*==========================================
- * �������΂��X�L���U���G�t�F�N�g���_���[�W
+ * 吹き飛ばしスキル攻撃エフェクト＆ダメージ 
  *------------------------------------------
  */
 int clif_skill_damage2 (struct block_list *src, struct block_list *dst,
@@ -4515,7 +4516,7 @@ int clif_skill_damage2 (struct block_list *src, struct block_list *dst,
 }
 
 /*==========================================
- * �x��/�񕜃X�L���G�t�F�N�g
+ * 支援/回復スキルエフェクト 
  *------------------------------------------
  */
 int clif_skill_nodamage (struct block_list *src, struct block_list *dst,
@@ -4538,7 +4539,7 @@ int clif_skill_nodamage (struct block_list *src, struct block_list *dst,
 }
 
 /*==========================================
- * �ꏊ�X�L���G�t�F�N�g
+ * 場所スキルエフェクト 
  *------------------------------------------
  */
 int clif_skill_poseffect (struct block_list *src, int skill_id, int val,
@@ -4561,7 +4562,7 @@ int clif_skill_poseffect (struct block_list *src, int skill_id, int val,
 }
 
 /*==========================================
- * �ꏊ�X�L���G�t�F�N�g�\��
+ * 場所スキルエフェクト表示 
  *------------------------------------------
  */
 int clif_skill_setunit (struct skill_unit *unit)
@@ -4582,31 +4583,31 @@ int clif_skill_setunit (struct skill_unit *unit)
     WBUFW (buf, 12) = unit->bl.y;
     WBUFB (buf, 14) = unit->group->unit_id;
     WBUFB (buf, 15) = 1;
-    WBUFL (buf, 15 + 1) = 0;    //1-4���ׂ�����Œ�
-    WBUFL (buf, 15 + 5) = 0;    //5-8���ׂ�����Œ�
-    //9-12�}�b�v���Ƃň�����77-80�Ƃ͂܂��Ⴄ4�o�C�g�̂��Ȃ��傫�Ȑ���
-    WBUFL (buf, 15 + 13) = unit->bl.y - 0x12;   //13-16���j�b�g��Y��W-18��ۂ�(Y:17��FF FF FF FF)
-    WBUFL (buf, 15 + 17) = 0x004f37dd;  //17-20���ׂ�����Œ�(0x1b2��0x004fdbdd�����)
-    WBUFL (buf, 15 + 21) = 0x0012f674;  //21-24���ׂ�����Œ�
-    WBUFL (buf, 15 + 25) = 0x0012f664;  //25-28���ׂ�����Œ�
-    WBUFL (buf, 15 + 29) = 0x0012f654;  //29-32���ׂ�����Œ�
-    WBUFL (buf, 15 + 33) = 0x77527bbc;  //33-36���ׂ�����Œ�
+    WBUFL (buf, 15 + 1) = 0;    //1-4調べた限り固定 
+    WBUFL (buf, 15 + 5) = 0;    //5-8調べた限り固定 
+     //9-12マップごとで一定の77-80とはまた違う4バイトのかなり大きな数字 
+    WBUFL (buf, 15 + 13) = unit->bl.y - 0x12;   //13-16ユニットのY座標-18っぽい(Y:17でFF FF FF FF) 
+    WBUFL (buf, 15 + 17) = 0x004f37dd;  //17-20調べた限り固定(0x1b2で0x004fdbddだった) 
+    WBUFL (buf, 15 + 21) = 0x0012f674;  //21-24調べた限り固定 
+    WBUFL (buf, 15 + 25) = 0x0012f664;  //25-28調べた限り固定 
+    WBUFL (buf, 15 + 29) = 0x0012f654;  //29-32調べた限り固定 
+    WBUFL (buf, 15 + 33) = 0x77527bbc;  //33-36調べた限り固定 
     //37-39
-    WBUFB (buf, 15 + 40) = 0x2d;    //40���ׂ�����Œ�
-    WBUFL (buf, 15 + 41) = 0;   //41-44���ׂ����0�Œ�
-    WBUFL (buf, 15 + 45) = 0;   //45-48���ׂ����0�Œ�
-    WBUFL (buf, 15 + 49) = 0;   //49-52���ׂ����0�Œ�
-    WBUFL (buf, 15 + 53) = 0x0048d919;  //53-56���ׂ�����Œ�(0x01b2��0x00495119�����)
-    WBUFL (buf, 15 + 57) = 0x0000003e;  //57-60���ׂ�����Œ�
-    WBUFL (buf, 15 + 61) = 0x0012f66c;  //61-64���ׂ�����Œ�
+    WBUFB (buf, 15 + 40) = 0x2d;    //40調べた限り固定 
+    WBUFL (buf, 15 + 41) = 0;   //41-44調べた限り0固定 
+    WBUFL (buf, 15 + 45) = 0;   //45-48調べた限り0固定 
+    WBUFL (buf, 15 + 49) = 0;   //49-52調べた限り0固定 
+    WBUFL (buf, 15 + 53) = 0x0048d919;  //53-56調べた限り固定(0x01b2で0x00495119だった) 
+    WBUFL (buf, 15 + 57) = 0x0000003e;  //57-60調べた限り固定 
+    WBUFL (buf, 15 + 61) = 0x0012f66c;  //61-64調べた限り固定 
     //65-68
     //69-72
     if (bl)
-        WBUFL (buf, 15 + 73) = bl->y;   //73-76�p�҂�Y��W
+        WBUFL (buf, 15 + 73) = bl->y;   //73-76術者のY座標 
     else
-        WBUFL (buf, 15 + 73) = 0;   //73-76�p�҂�Y��W
-    WBUFL (buf, 15 + 77) = unit->bl.m;  //77-80�}�b�vID���Ȃ��H���Ȃ�2�o�C�g�ő��肻���Ȑ���
-    WBUFB (buf, 15 + 81) = 0xaa;    //81�I�[����0xaa
+        WBUFL (buf, 15 + 73) = 0;   //73-76術者のY座標 
+    WBUFL (buf, 15 + 77) = unit->bl.m;  //77-80マップIDかなぁ？かなり2バイトで足りそうな数字 
+    WBUFB (buf, 15 + 81) = 0xaa;    //81終端文字0xaa 
 
     /*      Graffiti [Valaris]      */
     if (unit->group->unit_id == 0xb0)
@@ -4621,7 +4622,7 @@ int clif_skill_setunit (struct skill_unit *unit)
 }
 
 /*==========================================
- * �ꏊ�X�L���G�t�F�N�g�폜
+ * 場所スキルエフェクト削除 
  *------------------------------------------
  */
 int clif_skill_delunit (struct skill_unit *unit)
@@ -4637,7 +4638,7 @@ int clif_skill_delunit (struct skill_unit *unit)
 }
 
 /*==========================================
- * ���[�v�ꏊ�I��
+ * ワープ場所選択 
  *------------------------------------------
  */
 int clif_skill_warppoint (struct map_session_data *sd, int skill_num,
@@ -4665,7 +4666,7 @@ int clif_skill_warppoint (struct map_session_data *sd, int skill_num,
 }
 
 /*==========================================
- * ��������
+ * メモ応答 
  *------------------------------------------
  */
 int clif_skill_memo (struct map_session_data *sd, int flag)
@@ -4697,7 +4698,7 @@ int clif_skill_teleportmessage (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �����X�^�[����
+ * モンスター情報 
  *------------------------------------------
  */
 int clif_skill_estimation (struct map_session_data *sd,
@@ -4739,7 +4740,7 @@ int clif_skill_estimation (struct map_session_data *sd,
 }
 
 /*==========================================
- * ���Ԉُ��A�C�R��/���b�Z�[�W�\��
+ * 状態異常アイコン/メッセージ表示 
  *------------------------------------------
  */
 int clif_status_change (struct block_list *bl, int type, int flag)
@@ -4778,7 +4779,7 @@ int clif_displaymessage (const int fd, const char *mes)
 }
 
 /*==========================================
- * �V�̐��𑗐M����
+ * 天の声を送信する 
  *------------------------------------------
  */
 int clif_GMmessage (struct block_list *bl, char *mes, int len, int flag)
@@ -4804,7 +4805,7 @@ int clif_GMmessage (struct block_list *bl, char *mes, int len, int flag)
 }
 
 /*==========================================
- * HPSP�񕜃G�t�F�N�g�𑗐M����
+ * HPSP回復エフェクトを送信する 
  *------------------------------------------
  */
 int clif_heal (int fd, int type, int val)
@@ -4818,7 +4819,7 @@ int clif_heal (int fd, int type, int val)
 }
 
 /*==========================================
- * ��������
+ * 復活する 
  *------------------------------------------
  */
 int clif_resurrection (struct block_list *bl, int type)
@@ -4844,7 +4845,7 @@ int clif_resurrection (struct block_list *bl, int type)
 }
 
 /*==========================================
- * PVP����H�i���j
+ * PVP実装？（仮） 
  *------------------------------------------
  */
 int clif_set0199 (int fd, int type)
@@ -4857,7 +4858,7 @@ int clif_set0199 (int fd, int type)
 }
 
 /*==========================================
- * PVP����H(��)
+ * PVP実装？(仮) 
  *------------------------------------------
  */
 int clif_pvpset (struct map_session_data *sd, int pvprank, int pvpnum,
@@ -4918,7 +4919,7 @@ int clif_send0199 (int map, int type)
 }
 
 /*==========================================
- * ���B�G�t�F�N�g�𑗐M����
+ * 精錬エフェクトを送信する 
  *------------------------------------------
  */
 int clif_refine (int fd, struct map_session_data *sd __attribute__ ((unused)),
@@ -4960,7 +4961,7 @@ int clif_wis_end (int fd, int flag) // R 0098 <type>.B: 0: success to send wispe
 }
 
 /*==========================================
- * �L����ID���O�������ʂ𑗐M����
+ * キャラID名前引き結果を送信する 
  *------------------------------------------
  */
 int clif_solved_charname (struct map_session_data *sd, int char_id)
@@ -4990,7 +4991,7 @@ int clif_solved_charname (struct map_session_data *sd, int char_id)
 }
 
 /*==========================================
- * �J�[�h�̑}���\���X�g���Ԃ�
+ * カードの挿入可能リストを返す 
  *------------------------------------------
  */
 int clif_use_card (struct map_session_data *sd, int idx)
@@ -5013,19 +5014,19 @@ int clif_use_card (struct map_session_data *sd, int idx)
 
             if (sd->inventory_data[i] == NULL)
                 continue;
-            if (sd->inventory_data[i]->type != 4 && sd->inventory_data[i]->type != 5)   // �����h����Ȃ�
+            if (sd->inventory_data[i]->type != 4 && sd->inventory_data[i]->type != 5)   // 武器防具じゃない 
                 continue;
-            if (sd->status.inventory[i].card[0] == 0x00ff)  // ��������
+            if (sd->status.inventory[i].card[0] == 0x00ff)  // 製造武器 
                 continue;
             if (sd->status.inventory[i].card[0] == (short) 0xff00
                 || sd->status.inventory[i].card[0] == 0x00fe)
                 continue;
-            if (sd->status.inventory[i].identify == 0)  // ���Ӓ�
+            if (sd->status.inventory[i].identify == 0)  // 未鑑定 
                 continue;
 
-            if ((sd->inventory_data[i]->equip & ep) == 0)   // ���������Ⴄ
+            if ((sd->inventory_data[i]->equip & ep) == 0)   // 装備個所が違う 
                 continue;
-            if (sd->inventory_data[i]->type == 4 && ep == 32)   // ���J�[�h�Ɨ��蕐��
+            if (sd->inventory_data[i]->type == 4 && ep == 32)   // 盾カードと両手武器 
                 continue;
 
             for (j = 0; j < sd->inventory_data[i]->slot; j++)
@@ -5033,7 +5034,7 @@ int clif_use_card (struct map_session_data *sd, int idx)
                 if (sd->status.inventory[i].card[j] == 0)
                     break;
             }
-            if (j == sd->inventory_data[i]->slot)   // ���łɃJ�[�h�����t
+            if (j == sd->inventory_data[i]->slot)   // すでにカードが一杯 
                 continue;
 
             WFIFOW (fd, 4 + c * 2) = i + 2;
@@ -5047,7 +5048,7 @@ int clif_use_card (struct map_session_data *sd, int idx)
 }
 
 /*==========================================
- * �J�[�h�̑}���I��
+ * カードの挿入終了 
  *------------------------------------------
  */
 int clif_insert_card (struct map_session_data *sd, int idx_equip,
@@ -5068,7 +5069,7 @@ int clif_insert_card (struct map_session_data *sd, int idx_equip,
 }
 
 /*==========================================
- * �Ӓ��\�A�C�e�����X�g���M
+ * 鑑定可能アイテムリスト送信 
  *------------------------------------------
  */
 int clif_item_identify_list (struct map_session_data *sd)
@@ -5099,7 +5100,7 @@ int clif_item_identify_list (struct map_session_data *sd)
 }
 
 /*==========================================
- * �Ӓ茋��
+ * 鑑定結果 
  *------------------------------------------
  */
 int clif_item_identified (struct map_session_data *sd, int idx, int flag)
@@ -5118,8 +5119,8 @@ int clif_item_identified (struct map_session_data *sd, int idx, int flag)
 }
 
 /*==========================================
- * �C���\�A�C�e�����X�g���M
- * ����ۂ̃p�P�b�g���킩���Ȃ��̂œ��삵�܂���
+ * 修理可能アイテムリスト送信 
+ * ※実際のパケットがわからないので動作しません
  *------------------------------------------
  */
 int clif_item_repair_list (struct map_session_data *sd)
@@ -5150,7 +5151,7 @@ int clif_item_repair_list (struct map_session_data *sd)
 }
 
 /*==========================================
- * �A�C�e���ɂ����ꎞ�I�ȃX�L������
+ * アイテムによる一時的なスキル効果 
  *------------------------------------------
  */
 int clif_item_skill (struct map_session_data *sd, int skillid, int skilllv,
@@ -5180,7 +5181,7 @@ int clif_item_skill (struct map_session_data *sd, int skillid, int skilllv,
 }
 
 /*==========================================
- * �J�[�g�ɃA�C�e���ǉ�
+ * カートにアイテム追加 
  *------------------------------------------
  */
 int clif_cart_additem (struct map_session_data *sd, int n, int amount,
@@ -5247,7 +5248,7 @@ int clif_cart_additem (struct map_session_data *sd, int n, int amount,
 }
 
 /*==========================================
- * �J�[�g�����A�C�e���폜
+ *  カートからアイテム削除 
  *------------------------------------------
  */
 int clif_cart_delitem (struct map_session_data *sd, int n, int amount)
@@ -5268,7 +5269,7 @@ int clif_cart_delitem (struct map_session_data *sd, int n, int amount)
 }
 
 /*==========================================
- * �J�[�g�̃A�C�e�����X�g
+ * カートのアイテムリスト 
  *------------------------------------------
  */
 int clif_cart_itemlist (struct map_session_data *sd)
@@ -5316,7 +5317,7 @@ int clif_cart_itemlist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�[�g�̑����i���X�g
+ * カートの装備品リスト 
  *------------------------------------------
  */
 int clif_cart_equiplist (struct map_session_data *sd)
@@ -5406,6 +5407,11 @@ int clif_cart_equiplist (struct map_session_data *sd)
  *  2 The character is already in a party.
  *------------------------------------------
  */
+
+/*==========================================
+* パーティ作成完了
+*------------------------------------------
+*/
 int clif_party_created (struct map_session_data *sd, int flag)
 {
     int  fd;
@@ -5420,7 +5426,7 @@ int clif_party_created (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �p�[�e�B���񑗐M
+ * パーティ情報送信 
  *------------------------------------------
  */
 int clif_party_info (struct party *p, int fd)
@@ -5451,7 +5457,7 @@ int clif_party_info (struct party *p, int fd)
     }
     WBUFW (buf, 2) = 28 + c * 46;
     if (fd >= 0)
-    {                           // fd���ݒ肳���Ă��Ȃ炻���ɑ���
+    {                           // fdが設定されてるならそれに送る 
         //++++ may be need check size?
         memcpy (WFIFOP (fd, 0), buf, WBUFW (buf, 2));
         WFIFOSET (fd, WFIFOW (fd, 2));
@@ -5521,10 +5527,10 @@ int clif_party_inviteack (struct map_session_data *sd, char *nick, int flag)
 }
 
 /*==========================================
- * �p�[�e�B�ݒ著�M
- * flag & 0x001=exp�ύX�~�X
- *        0x010=item�ύX�~�X
- *        0x100=���l�ɂ̂ݑ��M
+ * パーティ設定送信 
+ * flag & 0x001=exp変更ミス 
+ *        0x010=item変更ミス 
+ *        0x100=一人にのみ送信 
  *------------------------------------------
  */
 int clif_party_option (struct party *p, struct map_session_data *sd, int flag)
@@ -5559,7 +5565,7 @@ int clif_party_option (struct party *p, struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �p�[�e�B�E�ށi�E�ޑO�ɌĂԂ��Ɓj
+ * パーティ脱退（脱退前に呼ぶこと） 
  *------------------------------------------
  */
 int clif_party_leaved (struct party *p, struct map_session_data *sd,
@@ -5596,7 +5602,7 @@ int clif_party_leaved (struct party *p, struct map_session_data *sd,
 }
 
 /*==========================================
- * �p�[�e�B���b�Z�[�W���M
+ * パーティメッセージ送信 
  *------------------------------------------
  */
 int clif_party_message (struct party *p, int account_id, char *mes, int len)
@@ -5625,7 +5631,7 @@ int clif_party_message (struct party *p, int account_id, char *mes, int len)
 }
 
 /*==========================================
- * �p�[�e�B��W�ʒm
+ * パーティ座標通知 
  *------------------------------------------
  */
 int clif_party_xy (struct party *p __attribute__ ((unused)), struct map_session_data *sd)
@@ -5645,7 +5651,7 @@ int clif_party_xy (struct party *p __attribute__ ((unused)), struct map_session_
 }
 
 /*==========================================
- * �p�[�e�BHP�ʒm
+ * パーティHP通知 
  *------------------------------------------
  */
 int clif_party_hp (struct party *p __attribute__ ((unused)), struct map_session_data *sd)
@@ -5666,7 +5672,7 @@ int clif_party_hp (struct party *p __attribute__ ((unused)), struct map_session_
 }
 
 /*==========================================
- * �p�[�e�B�ꏊ�ړ��i���g�p�j
+ * パーティ場所移動（未使用）
  *------------------------------------------
  */
 int clif_party_move (struct party *p, struct map_session_data *sd, int online)
@@ -5690,7 +5696,7 @@ int clif_party_move (struct party *p, struct map_session_data *sd, int online)
 }
 
 /*==========================================
- * �U�����邽�߂Ɉړ����K�v
+ * 攻撃するために移動が必要 
  *------------------------------------------
  */
 int clif_movetoattack (struct map_session_data *sd, struct block_list *bl)
@@ -5714,7 +5720,7 @@ int clif_movetoattack (struct map_session_data *sd, struct block_list *bl)
 }
 
 /*==========================================
- * �����G�t�F�N�g
+ * 製造エフェクト 
  *------------------------------------------
  */
 int clif_produceeffect (struct map_session_data *sd, int flag, int nameid)
@@ -5725,7 +5731,7 @@ int clif_produceeffect (struct map_session_data *sd, int flag, int nameid)
 
     fd = sd->fd;
 
-    // ���O�̓o�^�Ƒ��M�����ɂ��Ă���
+    // 名前の登録と送信を先にしておく 
     if (map_charid2nick (sd->status.char_id) == NULL)
         map_addchariddb (sd->status.char_id, sd->status.name);
     clif_solved_charname (sd, sd->status.char_id);
@@ -5741,7 +5747,7 @@ int clif_produceeffect (struct map_session_data *sd, int flag, int nameid)
 }
 
 /*==========================================
- * �I�[�g�X�y�� ���X�g���M
+ * オートスペル リスト送信 
  *------------------------------------------
  */
 int clif_autospell (struct map_session_data *sd, int skilllv)
@@ -5788,7 +5794,7 @@ int clif_autospell (struct map_session_data *sd, int skilllv)
 }
 
 /*==========================================
- * �f�B�{�[�V�����̐���
+ * ディボーションの青い糸 
  *------------------------------------------
  */
 int clif_devotion (struct map_session_data *sd, int target __attribute__ ((unused)))
@@ -5812,7 +5818,7 @@ int clif_devotion (struct map_session_data *sd, int target __attribute__ ((unuse
 }
 
 /*==========================================
- * ����
+ * 氣球 
  *------------------------------------------
  */
 int clif_spiritball (struct map_session_data *sd)
@@ -5847,7 +5853,7 @@ int clif_combo_delay (struct block_list *bl, int wait)
 }
 
 /*==========================================
- *���n����
+ * 白刃取り 
  *------------------------------------------
  */
 int clif_bladestop (struct block_list *src, struct block_list *dst, int bool)
@@ -5894,7 +5900,7 @@ int clif_changemapcell (int m, int x, int y, int cell_type, int type)
 }
 
 /*==========================================
- * MVP�G�t�F�N�g
+ * MVPエフェクト 
  *------------------------------------------
  */
 int clif_mvp_effect (struct map_session_data *sd)
@@ -5910,7 +5916,7 @@ int clif_mvp_effect (struct map_session_data *sd)
 }
 
 /*==========================================
- * MVP�A�C�e������
+ * MVPアイテム所得 
  *------------------------------------------
  */
 int clif_mvp_item (struct map_session_data *sd, int nameid)
@@ -5931,7 +5937,7 @@ int clif_mvp_item (struct map_session_data *sd, int nameid)
 }
 
 /*==========================================
- * MVP�o���l����
+ * MVP経験値所得 
  *------------------------------------------
  */
 int clif_mvp_exp (struct map_session_data *sd, int exp)
@@ -5975,7 +5981,7 @@ int clif_guild_created (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �M���h�����ʒm
+ * ギルド所属通知 
  *------------------------------------------
  */
 int clif_guild_belonginfo (struct map_session_data *sd, struct guild *g)
@@ -6002,7 +6008,7 @@ int clif_guild_belonginfo (struct map_session_data *sd, struct guild *g)
 }
 
 /*==========================================
- * �M���h�����o���O�C���ʒm
+ * ギルドメンバログイン通知 
  *------------------------------------------
  */
 int clif_guild_memberlogin_notice (struct guild *g, int idx, int flag)
@@ -6030,7 +6036,7 @@ int clif_guild_memberlogin_notice (struct guild *g, int idx, int flag)
 }
 
 /*==========================================
- * �M���h�}�X�^�[�ʒm(14d�ւ̉���)
+ * ギルドマスター通知(14dへの応答) 
  *------------------------------------------
  */
 int clif_guild_masterormember (struct map_session_data *sd)
@@ -6077,10 +6083,10 @@ int clif_guild_basicinfo (struct map_session_data *sd)
     WFIFOL (fd, 18) = g->average_lv;
     WFIFOL (fd, 22) = g->exp;
     WFIFOL (fd, 26) = g->next_exp;
-    WFIFOL (fd, 30) = 0;        // ���[
-    WFIFOL (fd, 34) = 0;        // VW�i���i�̈����H�F�����O���t���E�j
-    WFIFOL (fd, 38) = 0;        // RF�i���`�̓x�����H�F�����O���t�㉺�j
-    WFIFOL (fd, 42) = 0;        // �l���H
+    WFIFOL (fd, 30) = 0;        // 上納 
+    WFIFOL (fd, 34) = 0;        // VW（性格の悪さ？：性向グラフ左右）
+    WFIFOL (fd, 38) = 0;        // RF（正義の度合い？：性向グラフ上下） 
+    WFIFOL (fd, 42) = 0;        // 人数？ 
     memcpy (WFIFOP (fd, 46), g->name, 24);
     memcpy (WFIFOP (fd, 70), g->master, 24);
 
@@ -6152,7 +6158,7 @@ int clif_guild_basicinfo (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h����/�G�Ώ���
+ * ギルド同盟/敵対情報 
  *------------------------------------------
  */
 int clif_guild_allianceinfo (struct map_session_data *sd)
@@ -6185,7 +6191,7 @@ int clif_guild_allianceinfo (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�����o�[���X�g
+ * ギルドメンバーリスト 
  *------------------------------------------
  */
 int clif_guild_memberlist (struct map_session_data *sd)
@@ -6218,7 +6224,7 @@ int clif_guild_memberlist (struct map_session_data *sd)
         WFIFOL (fd, c * 104 + 22) = m->exp;
         WFIFOL (fd, c * 104 + 26) = m->online;
         WFIFOL (fd, c * 104 + 30) = m->position;
-        memset (WFIFOP (fd, c * 104 + 34), 0, 50);  // �����H
+        memset (WFIFOP (fd, c * 104 + 34), 0, 50);  // メモ？ 
         memcpy (WFIFOP (fd, c * 104 + 84), m->name, 24);
         c++;
     }
@@ -6228,7 +6234,7 @@ int clif_guild_memberlist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���E�����X�g
+ * ギルド役職名リスト 
  *------------------------------------------
  */
 int clif_guild_positionnamelist (struct map_session_data *sd)
@@ -6255,7 +6261,7 @@ int clif_guild_positionnamelist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���E���񃊃X�g
+ * ギルド役職情報リスト 
  *------------------------------------------
  */
 int clif_guild_positioninfolist (struct map_session_data *sd)
@@ -6285,7 +6291,7 @@ int clif_guild_positioninfolist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���E�ύX�ʒm
+ * ギルド役職変更通知 
  *------------------------------------------
  */
 int clif_guild_positionchanged (struct guild *g, int idx)
@@ -6311,7 +6317,7 @@ int clif_guild_positionchanged (struct guild *g, int idx)
 }
 
 /*==========================================
- * �M���h�����o�ύX�ʒm
+ * ギルドメンバ変更通知 
  *------------------------------------------
  */
 int clif_guild_memberpositionchanged (struct guild *g, int idx)
@@ -6335,7 +6341,7 @@ int clif_guild_memberpositionchanged (struct guild *g, int idx)
 }
 
 /*==========================================
- * �M���h�G���u�������M
+ * ギルドエンブレム送信 
  *------------------------------------------
  */
 int clif_guild_emblem (struct map_session_data *sd, struct guild *g)
@@ -6359,7 +6365,7 @@ int clif_guild_emblem (struct map_session_data *sd, struct guild *g)
 }
 
 /*==========================================
- * �M���h�X�L�����M
+ * ギルドスキル送信 
  *------------------------------------------
  */
 int clif_guild_skillinfo (struct map_session_data *sd)
@@ -6400,7 +6406,7 @@ int clif_guild_skillinfo (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���m���M
+ * ギルド告知送信 
  *------------------------------------------
  */
 int clif_guild_notice (struct map_session_data *sd, struct guild *g)
@@ -6421,7 +6427,7 @@ int clif_guild_notice (struct map_session_data *sd, struct guild *g)
 }
 
 /*==========================================
- * �M���h�����o���U
+ * ギルドメンバ勧誘 
  *------------------------------------------
  */
 int clif_guild_invite (struct map_session_data *sd, struct guild *g)
@@ -6440,7 +6446,7 @@ int clif_guild_invite (struct map_session_data *sd, struct guild *g)
 }
 
 /*==========================================
- * �M���h�����o���U����
+ * ギルドメンバ勧誘結果 
  *------------------------------------------
  */
 int clif_guild_inviteack (struct map_session_data *sd, int flag)
@@ -6458,7 +6464,7 @@ int clif_guild_inviteack (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �M���h�����o�E�ޒʒm
+ * ギルドメンバ脱退通知 
  *------------------------------------------
  */
 int clif_guild_leave (struct map_session_data *sd, const char *name,
@@ -6478,7 +6484,7 @@ int clif_guild_leave (struct map_session_data *sd, const char *name,
 }
 
 /*==========================================
- * �M���h�����o�Ǖ��ʒm
+ * ギルドメンバ追放通知 
  *------------------------------------------
  */
 int clif_guild_explusion (struct map_session_data *sd, const char *name,
@@ -6499,7 +6505,7 @@ int clif_guild_explusion (struct map_session_data *sd, const char *name,
 }
 
 /*==========================================
- * �M���h�Ǖ������o���X�g
+ * ギルド追放メンバリスト 
  *------------------------------------------
  */
 int clif_guild_explusionlist (struct map_session_data *sd)
@@ -6532,7 +6538,7 @@ int clif_guild_explusionlist (struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���b
+ * ギルド会話 
  *------------------------------------------
  */
 int clif_guild_message (struct guild *g, int account_id __attribute__ ((unused)), const char *mes,
@@ -6557,7 +6563,7 @@ int clif_guild_message (struct guild *g, int account_id __attribute__ ((unused))
 }
 
 /*==========================================
- * �M���h�X�L�������U���ʒm
+ * ギルドスキル割り振り通知 
  *------------------------------------------
  */
 int clif_guild_skillup (struct map_session_data *sd, int skill_num, int lv)
@@ -6579,7 +6585,7 @@ int clif_guild_skillup (struct map_session_data *sd, int skill_num, int lv)
 }
 
 /*==========================================
- * �M���h�����v��
+ * ギルド同盟要請 
  *------------------------------------------
  */
 int clif_guild_reqalliance (struct map_session_data *sd, int account_id,
@@ -6600,7 +6606,7 @@ int clif_guild_reqalliance (struct map_session_data *sd, int account_id,
 }
 
 /*==========================================
- * �M���h��������
+ * ギルド同盟結果 
  *------------------------------------------
  */
 int clif_guild_allianceack (struct map_session_data *sd, int flag)
@@ -6618,7 +6624,7 @@ int clif_guild_allianceack (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �M���h�֌W����ʒm
+ * ギルド関係解消通知 
  *------------------------------------------
  */
 int clif_guild_delalliance (struct map_session_data *sd, int guild_id,
@@ -6638,7 +6644,7 @@ int clif_guild_delalliance (struct map_session_data *sd, int guild_id,
 }
 
 /*==========================================
- * �M���h�G�Ό���
+ * ギルド敵対結果 
  *------------------------------------------
  */
 int clif_guild_oppositionack (struct map_session_data *sd, int flag)
@@ -6656,7 +6662,7 @@ int clif_guild_oppositionack (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �M���h�֌W�ǉ�
+ * ギルド関係追加 
  *------------------------------------------
  */
 /*int clif_guild_allianceadded(struct guild *g,int idx)
@@ -6671,7 +6677,7 @@ int clif_guild_oppositionack (struct map_session_data *sd, int flag)
 }*/
 
 /*==========================================
- * �M���h���U�ʒm
+ * ギルド解散通知 
  *------------------------------------------
  */
 int clif_guild_broken (struct map_session_data *sd, int flag)
@@ -6689,7 +6695,7 @@ int clif_guild_broken (struct map_session_data *sd, int flag)
 }
 
 /*==========================================
- * �G���[�V����
+ * エモーション 
  *------------------------------------------
  */
 void clif_emotion (struct block_list *bl, int type)
@@ -6726,7 +6732,7 @@ static void clif_emotion_towards (struct block_list *bl,
 }
 
 /*==========================================
- * �g�[�L�[�{�b�N�X
+ * トーキーボックス 
  *------------------------------------------
  */
 void clif_talkiebox (struct block_list *bl, char *talkie)
@@ -6743,7 +6749,7 @@ void clif_talkiebox (struct block_list *bl, char *talkie)
 }
 
 /*==========================================
- * �����G�t�F�N�g
+ * 結婚エフェクト 
  *------------------------------------------
  */
 void clif_wedding_effect (struct block_list *bl)
@@ -6758,7 +6764,7 @@ void clif_wedding_effect (struct block_list *bl)
 }
 
 /*==========================================
- * ���Ȃ��Ɉ��������g�p�����O����
+ * あなたに逢いたい使用時名前叫び 
  *------------------------------------------
 
 void clif_callpartner(struct map_session_data *sd)
@@ -6784,7 +6790,7 @@ void clif_callpartner(struct map_session_data *sd)
 }
 */
 /*==========================================
- * ���
+ * 座る 
  *------------------------------------------
  */
 void clif_sitting (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -6859,7 +6865,7 @@ int clif_GM_kick (struct map_session_data *sd, struct map_session_data *tsd,
 }
 
 /*==========================================
- * Wis���ۋ�����
+ * Wis拒否許可応答 
  *------------------------------------------
  */
 int clif_wisexin (struct map_session_data *sd, int type, int flag)
@@ -6878,7 +6884,7 @@ int clif_wisexin (struct map_session_data *sd, int type, int flag)
 }
 
 /*==========================================
- * Wis�S���ۋ�����
+ * Wis全拒否許可応答 
  *------------------------------------------
  */
 int clif_wisall (struct map_session_data *sd, int type, int flag)
@@ -6898,7 +6904,7 @@ int clif_wisall (struct map_session_data *sd, int type, int flag)
 }
 
 /*==========================================
- * �T�E���h�G�t�F�N�g
+ * サウンドエフェクト 
  *------------------------------------------
  */
 void clif_soundeffect (struct map_session_data *sd, struct block_list *bl,
@@ -6959,7 +6965,7 @@ int clif_specialeffect (struct block_list *bl, int type, int flag)
 // ------------
 // clif_parse_*
 // ------------
-// �p�P�b�g�ǂݎ���ĐF�X����
+// パケット読み取って色々操作 
 /*==========================================
  *
  *------------------------------------------
@@ -7020,8 +7026,8 @@ void clif_parse_WantToConnection (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * 007d �N���C�A���g���}�b�v�ǂݍ��݊���
- * map�N�����ɕK�v�ȃf�[�^���S�đ�������
+ * 007d クライアント側マップ読み込み完了 
+ * map侵入時に必要なデータを全て送りつける 
  *------------------------------------------
  */
 void clif_parse_LoadEndAck (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -7033,7 +7039,7 @@ void clif_parse_LoadEndAck (int fd __attribute__ ((unused)), struct map_session_
     if (sd->bl.prev != NULL)
         return;
 
-    // �ڑ�ok��
+    // 接続ok時 
     //clif_authok();
     if (sd->npc_id)
         npc_event_dequeue (sd);
@@ -7041,7 +7047,7 @@ void clif_parse_LoadEndAck (int fd __attribute__ ((unused)), struct map_session_
     pc_checkitem (sd);
     //guild_info();
 
-    // loadendack��
+    // loadendack時 
     // next exp
     clif_updatestatus (sd, SP_NEXTBASEEXP);
     clif_updatestatus (sd, SP_NEXTJOBEXP);
@@ -7074,7 +7080,7 @@ void clif_parse_LoadEndAck (int fd __attribute__ ((unused)), struct map_session_
             pc_setinvincibletimer (sd, battle_config.pc_invincible_time);
     }
 
-    map_addblock (&sd->bl);     // �u���b�N�o�^
+    map_addblock (&sd->bl);     // ブロック登録 
     clif_spawnpc (sd);          // spawn
 
     // weight max , now
@@ -7136,7 +7142,7 @@ void clif_parse_LoadEndAck (int fd __attribute__ ((unused)), struct map_session_
         && pc_checkskill (sd, SM_AUTOBERSERK) > 0
         && (sd->sc_data[SC_PROVOKE].timer == -1
             || sd->sc_data[SC_PROVOKE].val2 == 0))
-        // �I�[�g�o�[�T�[�N����
+          // オートバーサーク発動 
         skill_status_change_start (&sd->bl, SC_PROVOKE, 10, 1, 0, 0, 0, 0);
 
 //  if(time(&timer) < ((weddingtime=pc_readglobalreg(sd,"PC_WEDDING_TIME")) + 3600))
@@ -7208,7 +7214,7 @@ void clif_parse_WalkToXY (int fd, struct map_session_data *sd)
     if (sd->npc_id != 0 || sd->state.storage_flag)
         return;
 
-    if (sd->skilltimer != -1 && pc_checkskill (sd, SA_FREECAST) <= 0)   // �t���[�L���X�g
+    if (sd->skilltimer != -1 && pc_checkskill (sd, SA_FREECAST) <= 0)   // フリーキャスト 
         return;
 
     if (sd->chatID)
@@ -7217,13 +7223,13 @@ void clif_parse_WalkToXY (int fd, struct map_session_data *sd)
     if (sd->canmove_tick > gettick ())
         return;
 
-    // �X�e�[�^�X�ُ����n�C�f�B���O��(�g���l���h���C�u��)�œ����Ȃ�
-    if ((sd->opt1 > 0 && sd->opt1 != 6) || sd->sc_data[SC_ANKLE].timer != -1 || //�A���N���X�l�A
-        sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||  //�I�[�g�J�E���^�[
-        sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //���񂾂ӂ�
-        sd->sc_data[SC_BLADESTOP].timer != -1 ||    //���n����
-        sd->sc_data[SC_SPIDERWEB].timer != -1 ||    //�X�p�C�_�[�E�F�b�u
-        (sd->sc_data[SC_DANCING].timer != -1 && sd->sc_data[SC_DANCING].val4))  //���t�X�L�����t���͓����Ȃ�
+     // ステータス異常やハイディング中(トンネルドライブ無)で動けない 
+    if ((sd->opt1 > 0 && sd->opt1 != 6) || sd->sc_data[SC_ANKLE].timer != -1 || //アンクルスネア
+        sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||  //オートカウンター 
+        sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //死んだふり 
+        sd->sc_data[SC_BLADESTOP].timer != -1 ||    //白刃取り 
+        sd->sc_data[SC_SPIDERWEB].timer != -1 ||    //スパイダーウェッブ 
+        (sd->sc_data[SC_DANCING].timer != -1 && sd->sc_data[SC_DANCING].val4))  //合奏スキル演奏中は動けない 
         return;
     if ((sd->status.option & 2) && pc_checkskill (sd, RG_TUNNELDRIVE) <= 0)
         return;
@@ -7592,13 +7598,12 @@ void clif_parse_ActionRequest (int fd, struct map_session_data *sd)
         clif_clearchar_area (&sd->bl, 1);
         return;
     }
-    if (sd->npc_id != 0 || sd->opt1 > 0 || sd->status.option & 2 || sd->state.storage_flag || (sd->sc_data && (sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||   //�I�[�g�J�E���^�[
-                                                                                                               sd->sc_data[SC_BLADESTOP].timer != -1 || //���n����
-                                                                                                               sd->sc_data
-                                                                                                               [SC_DANCING].timer
-                                                                                                               !=
-                                                                                                               -1)))
-        return;
+    if (sd->npc_id != 0 || sd->opt1 > 0 || sd->status.option & 2 || sd->state.storage_flag || 
+	(sd->sc_data && 
+	 (sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||   //オートカウンター 
+	 sd->sc_data[SC_BLADESTOP].timer != -1 || //白刃取り 
+	 sd->sc_data[SC_DANCING].timer!=-1)))  //ダンス中 
+           return;
 
     tick = gettick ();
 
@@ -7632,12 +7637,12 @@ void clif_parse_ActionRequest (int fd, struct map_session_data *sd)
             break;
         case 0x02:             // sitdown
             pc_stop_walking (sd, 1);
-            skill_gangsterparadise (sd, 1); // �M�����O�X�^�[�p���_�C�X�ݒ�
+            skill_gangsterparadise (sd, 1);  // ギャングスターパラダイス設定 
             pc_setsit (sd);
             clif_sitting (fd, sd);
             break;
         case 0x03:             // standup
-            skill_gangsterparadise (sd, 0); // �M�����O�X�^�[�p���_�C�X����
+            skill_gangsterparadise (sd, 0);  // ギャングスターパラダイス解除 
             pc_setstand (sd);
             WBUFW (buf, 0) = 0x8a;
             WBUFL (buf, 2) = sd->bl.id;
@@ -7832,10 +7837,10 @@ void clif_parse_TakeItem (int fd, struct map_session_data *sd)
         return;
     }
 
-    if (sd->npc_id != 0 || sd->opt1 > 0 || (sd->sc_data && (sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //���񂾂ӂ�
-                                                            sd->sc_data[SC_BLADESTOP].timer != -1 ||    //���n����
-                                                            sd->sc_data[SC_BERSERK].timer != -1 ||  //�o�[�T�[�N
-                                                            sd->sc_data[SC_NOCHAT].timer != -1)))   //���b�֎~
+    if (sd->npc_id != 0 || sd->opt1 > 0 || (sd->sc_data && (sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //死んだふり 
+                                                            sd->sc_data[SC_BLADESTOP].timer != -1 ||    //白刃取り 
+                                                            sd->sc_data[SC_BERSERK].timer != -1 ||      //バーサーク 
+                                                            sd->sc_data[SC_NOCHAT].timer != -1)))       //会話禁止 
         return;
 
     if (fitem == NULL || fitem->bl.m != sd->bl.m)
@@ -7866,9 +7871,9 @@ void clif_parse_DropItem (int fd, struct map_session_data *sd)
         clif_clearchar_area (&sd->bl, 1);
         return;
     }
-    if (sd->npc_id != 0 || sd->opt1 > 0 || map[sd->bl.m].flag.no_player_drops || (sd->sc_data && (sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||    //�I�[�g�J�E���^�[
-                                                                                                  sd->sc_data[SC_BLADESTOP].timer != -1 ||  //���n����
-                                                                                                  sd->sc_data[SC_BERSERK].timer != -1)))    //�o�[�T�[�N
+    if (sd->npc_id != 0 || sd->opt1 > 0 || map[sd->bl.m].flag.no_player_drops || (sd->sc_data && (sd->sc_data[SC_AUTOCOUNTER].timer != -1 ||    //オートカウンター 
+                                                                                                  sd->sc_data[SC_BLADESTOP].timer != -1 ||  //白刃取り 
+                                                                                                  sd->sc_data[SC_BERSERK].timer != -1)))    //バーサーク 
         return;
 
     item_index = RFIFOW (fd, 2) - 2;
@@ -7890,10 +7895,10 @@ void clif_parse_UseItem (int fd, struct map_session_data *sd)
         clif_clearchar_area (&sd->bl, 1);
         return;
     }
-    if (sd->npc_id != 0 || sd->opt1 > 0 || (sd->sc_data && (sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //���񂾂ӂ�
-                                                            sd->sc_data[SC_BLADESTOP].timer != -1 ||    //���n����
-                                                            sd->sc_data[SC_BERSERK].timer != -1 ||  //�o�[�T�[�N
-                                                            sd->sc_data[SC_NOCHAT].timer != -1)))   //���b�֎~
+    if (sd->npc_id != 0 || sd->opt1 > 0 || (sd->sc_data && (sd->sc_data[SC_TRICKDEAD].timer != -1 ||    //死んだふり
+                                                            sd->sc_data[SC_BLADESTOP].timer != -1 ||    //白刃取り 
+                                                            sd->sc_data[SC_BERSERK].timer != -1 ||      //バーサーク 
+                                                            sd->sc_data[SC_NOCHAT].timer != -1)))       //会話禁止 
         return;
 
     if (sd->invincible_timer != -1)
@@ -7934,18 +7939,18 @@ void clif_parse_EquipItem (int fd, struct map_session_data *sd)
         return;
 
     if (sd->status.inventory[index].identify != 1)
-    {                           // ���Ӓ�
+    {                           // 未鑑定 
         // Bjorn: Auto-identify items when equipping them as there
         //  is no nice way to do this in the client yet.
         sd->status.inventory[index].identify = 1;
         //clif_equipitemack(sd,index,0,0);  // fail
         //return;
     }
-    //�y�b�g�p�����ł��邩�Ȃ���
+     //ペット用装備であるかないか 
     if (sd->inventory_data[index])
     {
         if (sd->inventory_data[index]->type == 10)
-            RFIFOW (fd, 4) = 0x8000;    // ���𖳗����葕���ł����悤�Ɂi�|�|�G
+            RFIFOW (fd, 4) = 0x8000;    // 矢を無理やり装備できるように（−−； 
         pc_equipitem (sd, index, RFIFOW (fd, 4));
     }
 }
@@ -8108,7 +8113,7 @@ void clif_parse_ChatLeave (int fd __attribute__ ((unused)), struct map_session_d
 }
 
 /*==========================================
- * �����v���𑊎��ɑ���
+ * 取引要請を相手に送る 
  *------------------------------------------
  */
 void clif_parse_TradeRequest (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8125,7 +8130,7 @@ void clif_parse_TradeRequest (int fd __attribute__ ((unused)), struct map_sessio
 }
 
 /*==========================================
- * �����v��
+ * 取引要請 
  *------------------------------------------
  */
 void clif_parse_TradeAck (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8136,7 +8141,7 @@ void clif_parse_TradeAck (int fd __attribute__ ((unused)), struct map_session_da
 }
 
 /*==========================================
- * �A�C�e���ǉ�
+ * アイテム追加 
  *------------------------------------------
  */
 void clif_parse_TradeAddItem (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8147,7 +8152,7 @@ void clif_parse_TradeAddItem (int fd __attribute__ ((unused)), struct map_sessio
 }
 
 /*==========================================
- * �A�C�e���ǉ����(ok����)
+ * アイテム追加完了(ok押し) 
  *------------------------------------------
  */
 void clif_parse_TradeOk (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8156,7 +8161,7 @@ void clif_parse_TradeOk (int fd __attribute__ ((unused)), struct map_session_dat
 }
 
 /*==========================================
- * �����L�����Z��
+ * 取引キャンセル 
  *------------------------------------------
  */
 void clif_parse_TradeCansel (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8165,7 +8170,7 @@ void clif_parse_TradeCansel (int fd __attribute__ ((unused)), struct map_session
 }
 
 /*==========================================
- * ��������(trade����)
+ * 取引許諾(trade押し) 
  *------------------------------------------
  */
 void clif_parse_TradeCommit (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8183,7 +8188,7 @@ void clif_parse_StopAttack (int fd __attribute__ ((unused)), struct map_session_
 }
 
 /*==========================================
- * �J�[�g�փA�C�e�����ڂ�
+ * カートへアイテムを移す 
  *------------------------------------------
  */
 void clif_parse_PutItemToCart (int fd, struct map_session_data *sd)
@@ -8196,7 +8201,7 @@ void clif_parse_PutItemToCart (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�[�g�����A�C�e�����o��
+ * カートからアイテムを出す 
  *------------------------------------------
  */
 void clif_parse_GetItemFromCart (int fd, struct map_session_data *sd)
@@ -8209,7 +8214,7 @@ void clif_parse_GetItemFromCart (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �t���i(��,�y�R,�J�[�g)���͂���
+ * 付属品(鷹,ペコ,カート)をはずす 
  *------------------------------------------
  */
 void clif_parse_RemoveOption (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8233,7 +8238,7 @@ void clif_parse_RemoveOption (int fd __attribute__ ((unused)), struct map_sessio
 }
 
 /*==========================================
- * �`�F���W�J�[�g
+ * チェンジカート 
  *------------------------------------------
  */
 void clif_parse_ChangeCart (int fd, struct map_session_data *sd)
@@ -8242,7 +8247,7 @@ void clif_parse_ChangeCart (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�e�[�^�X�A�b�v
+ * ステータスアップ 
  *------------------------------------------
  */
 void clif_parse_StatusUp (int fd, struct map_session_data *sd)
@@ -8251,7 +8256,7 @@ void clif_parse_StatusUp (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�L�����x���A�b�v
+ * スキルレベルアップ 
  *------------------------------------------
  */
 void clif_parse_SkillUp (int fd, struct map_session_data *sd)
@@ -8260,7 +8265,7 @@ void clif_parse_SkillUp (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�L���g�p�iID�w���j
+ * スキル使用（ID指定） 
  *------------------------------------------
  */
 void clif_parse_UseSkillToId (int fd, struct map_session_data *sd)
@@ -8338,7 +8343,7 @@ void clif_parse_UseSkillToId (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�L���g�p�i�ꏊ�w���j
+ * スキル使用（場所指定） 
  *------------------------------------------
  */
 void clif_parse_UseSkillToPos (int fd, struct map_session_data *sd)
@@ -8410,7 +8415,7 @@ void clif_parse_UseSkillToPos (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �X�L���g�p�imap�w���j
+ * スキル使用（map指定） 
  *------------------------------------------
  */
 void clif_parse_UseSkillMap (int fd, struct map_session_data *sd)
@@ -8437,7 +8442,7 @@ void clif_parse_UseSkillMap (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �����v��
+ * メモ要求 
  *------------------------------------------
  */
 void clif_parse_RequestMemo (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8532,7 +8537,7 @@ void clif_parse_NpcCloseClicked (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �A�C�e���Ӓ�
+ * アイテム鑑定 
  *------------------------------------------
  */
 void clif_parse_ItemIdentify (int fd, struct map_session_data *sd)
@@ -8541,7 +8546,7 @@ void clif_parse_ItemIdentify (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �I�[�g�X�y�����M
+ * オートスペル受信 
  *------------------------------------------
  */
 void clif_parse_AutoSpell (int fd, struct map_session_data *sd)
@@ -8550,7 +8555,7 @@ void clif_parse_AutoSpell (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�[�h�g�p
+ * カード使用 
  *------------------------------------------
  */
 void clif_parse_UseCard (int fd, struct map_session_data *sd)
@@ -8559,7 +8564,7 @@ void clif_parse_UseCard (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�[�h�}�������I��
+ * カード挿入装備選択 
  *------------------------------------------
  */
 void clif_parse_InsertCard (int fd, struct map_session_data *sd)
@@ -8568,7 +8573,7 @@ void clif_parse_InsertCard (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * 0193 �L����ID���O����
+ * 0193 キャラID名前引き 
  *------------------------------------------
  */
 void clif_parse_SolveCharName (int fd, struct map_session_data *sd)
@@ -8608,7 +8613,7 @@ void clif_parse_ResetChar (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * 019c /lb��
+ * 019c /lb等 
  *------------------------------------------
  */
 void clif_parse_LGMmessage (int fd, struct map_session_data *sd)
@@ -8631,7 +8636,7 @@ void clif_parse_LGMmessage (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v���q�ɂ֓�����
+ * カプラ倉庫へ入れる 
  *------------------------------------------
  */
 void clif_parse_MoveToKafra (int fd, struct map_session_data *sd)
@@ -8654,7 +8659,7 @@ void clif_parse_MoveToKafra (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v���q�ɂ����o��
+ * カプラ倉庫から出す 
  *------------------------------------------
  */
 void clif_parse_MoveFromKafra (int fd, struct map_session_data *sd)
@@ -8677,7 +8682,7 @@ void clif_parse_MoveFromKafra (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v���q�ɂփJ�[�g����������
+ * カプラ倉庫へカートから入れる 
  *------------------------------------------
  */
 void clif_parse_MoveToKafraFromCart (int fd, struct map_session_data *sd)
@@ -8695,7 +8700,7 @@ void clif_parse_MoveToKafraFromCart (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v���q�ɂ����o��
+ * カプラ倉庫から出す 
  *------------------------------------------
  */
 void clif_parse_MoveFromKafraToCart (int fd, struct map_session_data *sd)
@@ -8713,7 +8718,7 @@ void clif_parse_MoveFromKafraToCart (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �J�v���q�ɂ�����
+ * カプラ倉庫を閉じる 
  *------------------------------------------
  */
 void clif_parse_CloseKafra (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8797,7 +8802,7 @@ void clif_parse_ReplyPartyInvite (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �p�[�e�B�E�ޗv��
+ * パーティ脱退要求 
  *------------------------------------------
  */
 void clif_parse_LeaveParty (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8806,7 +8811,7 @@ void clif_parse_LeaveParty (int fd __attribute__ ((unused)), struct map_session_
 }
 
 /*==========================================
- * �p�[�e�B�����v��
+ * パーティ除名要求 
  *------------------------------------------
  */
 void clif_parse_RemovePartyMember (int fd, struct map_session_data *sd)
@@ -8815,7 +8820,7 @@ void clif_parse_RemovePartyMember (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �p�[�e�B�ݒ��ύX�v��
+ * パーティ設定変更要求 
  *------------------------------------------
  */
 void clif_parse_PartyChangeOption (int fd, struct map_session_data *sd)
@@ -8916,7 +8921,7 @@ void clif_parse_CreateGuild (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�}�X�^�[���ǂ����m�F
+ * ギルドマスターかどうか確認 
  *------------------------------------------
  */
 void clif_parse_GuildCheckMaster (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -8925,29 +8930,29 @@ void clif_parse_GuildCheckMaster (int fd __attribute__ ((unused)), struct map_se
 }
 
 /*==========================================
- * �M���h�����v��
+ * ギルド情報要求 
  *------------------------------------------
  */
 void clif_parse_GuildReqeustInfo (int fd, struct map_session_data *sd)
 {
     switch (RFIFOL (fd, 2))
     {
-        case 0:                // �M���h���{�����A�����G�Ώ���
+        case 0:                // ギルド基本情報、同盟敵対情報 
             clif_guild_basicinfo (sd);
             clif_guild_allianceinfo (sd);
             break;
-        case 1:                // �����o�[���X�g�A���E�����X�g
+        case 1:                // メンバーリスト、役職名リスト 
             clif_guild_positionnamelist (sd);
             clif_guild_memberlist (sd);
             break;
-        case 2:                // ���E�����X�g�A���E���񃊃X�g
+        case 2:                // 役職名リスト、役職情報リスト 
             clif_guild_positionnamelist (sd);
             clif_guild_positioninfolist (sd);
             break;
-        case 3:                // �X�L�����X�g
+        case 3:                // スキルリスト 
             clif_guild_skillinfo (sd);
             break;
-        case 4:                // �Ǖ����X�g
+        case 4:                // 追放リスト 
             clif_guild_explusionlist (sd);
             break;
         default:
@@ -8959,7 +8964,7 @@ void clif_parse_GuildReqeustInfo (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���E�ύX
+ * ギルド役職変更 
  *------------------------------------------
  */
 void clif_parse_GuildChangePositionInfo (int fd, struct map_session_data *sd)
@@ -8986,7 +8991,7 @@ void clif_parse_GuildChangePositionInfo (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�����o���E�ύX
+ * ギルドメンバ役職変更 
  *------------------------------------------
  */
 void clif_parse_GuildChangeMemberPosition (int fd,
@@ -9015,7 +9020,7 @@ void clif_parse_GuildChangeMemberPosition (int fd,
 }
 
 /*==========================================
- * �M���h�G���u�����v��
+ * ギルドエンブレム要求 
  *------------------------------------------
  */
 void clif_parse_GuildRequestEmblem (int fd, struct map_session_data *sd)
@@ -9026,7 +9031,7 @@ void clif_parse_GuildRequestEmblem (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�G���u�����ύX
+ * ギルドエンブレム変更 
  *------------------------------------------
  */
 void clif_parse_GuildChangeEmblem (int fd, struct map_session_data *sd)
@@ -9035,7 +9040,7 @@ void clif_parse_GuildChangeEmblem (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���m�ύX
+ * ギルド告知変更 
  *------------------------------------------
  */
 void clif_parse_GuildChangeNotice (int fd, struct map_session_data *sd)
@@ -9044,7 +9049,7 @@ void clif_parse_GuildChangeNotice (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���U
+ * ギルド勧誘 
  *------------------------------------------
  */
 void clif_parse_GuildInvite (int fd, struct map_session_data *sd)
@@ -9053,7 +9058,7 @@ void clif_parse_GuildInvite (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���U�ԐM
+ * ギルド勧誘返信 
  *------------------------------------------
  */
 void clif_parse_GuildReplyInvite (int fd, struct map_session_data *sd)
@@ -9062,7 +9067,7 @@ void clif_parse_GuildReplyInvite (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�E��
+ * ギルド脱退 
  *------------------------------------------
  */
 void clif_parse_GuildLeave (int fd, struct map_session_data *sd)
@@ -9072,7 +9077,7 @@ void clif_parse_GuildLeave (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�Ǖ�
+ * ギルド追放 
  *------------------------------------------
  */
 void clif_parse_GuildExplusion (int fd, struct map_session_data *sd)
@@ -9125,7 +9130,7 @@ void clif_parse_GuildMessage (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�����v��
+ * ギルド同盟要求 
  *------------------------------------------
  */
 void clif_parse_GuildRequestAlliance (int fd, struct map_session_data *sd)
@@ -9134,7 +9139,7 @@ void clif_parse_GuildRequestAlliance (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�����v���ԐM
+ * ギルド同盟要求返信 
  *------------------------------------------
  */
 void clif_parse_GuildReplyAlliance (int fd, struct map_session_data *sd)
@@ -9143,7 +9148,7 @@ void clif_parse_GuildReplyAlliance (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�֌W����
+ * ギルド関係解消 
  *------------------------------------------
  */
 void clif_parse_GuildDelAlliance (int fd, struct map_session_data *sd)
@@ -9152,7 +9157,7 @@ void clif_parse_GuildDelAlliance (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h�G��
+ * ギルド敵対 
  *------------------------------------------
  */
 void clif_parse_GuildOpposition (int fd, struct map_session_data *sd)
@@ -9161,7 +9166,7 @@ void clif_parse_GuildOpposition (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * �M���h���U
+ * ギルド解散 
  *------------------------------------------
  */
 void clif_parse_GuildBreak (int fd, struct map_session_data *sd)
@@ -9281,7 +9286,7 @@ void clif_parse_GMHide (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * GM�ɂ����`���b�g�֎~���ԕt�^
+ * GMによるチャット禁止時間付与 
  *------------------------------------------
  */
 void clif_parse_GMReqNoChat (int fd, struct map_session_data *sd)
@@ -9331,7 +9336,7 @@ void clif_parse_GMReqNoChat (int fd, struct map_session_data *sd)
 }
 
 /*==========================================
- * GM�ɂ����`���b�g�֎~���ԎQ�Ɓi�H�j
+ * GMによるチャット禁止時間参照（？）
  *------------------------------------------
  */
 void clif_parse_GMReqNoChatCount (int fd, struct map_session_data *sd __attribute__ ((unused)))
@@ -9572,7 +9577,7 @@ int monk (struct map_session_data *sd, struct block_list *target, int type)
 }
 
 /*==========================================
- * �X�p�m�r��/doridori�ɂ���SPR2�{
+ * スパノビの/doridoriによるSPR2倍 
  *------------------------------------------
  */
 void clif_parse_sn_doridori (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -9584,7 +9589,7 @@ void clif_parse_sn_doridori (int fd __attribute__ ((unused)), struct map_session
 }
 
 /*==========================================
- * �X�p�m�r�̔����g��
+ * スパノビの爆裂波動 
  *------------------------------------------
  */
 void clif_parse_sn_explosionspirits (int fd __attribute__ ((unused)), struct map_session_data *sd)
@@ -10392,8 +10397,8 @@ static char *clif_validate_chat (struct map_session_data *sd, int type,
 }
 
 /*==========================================
- * �N���C�A���g�����̃p�P�b�g����
- * socket.c��do_parsepacket�����Ăяo������
+ * クライアントからのパケット解析 
+ * socket.cのdo_parsepacketから呼び出される 
  *------------------------------------------
  */
 static int clif_parse (int fd)
@@ -10418,9 +10423,9 @@ static int clif_parse (int fd)
         }
     }
 
-    // �ڑ����؂��Ă��̂Ō��n��
+    // 接続が切れてるので後始末 
     if (!chrif_isconnect () || session[fd]->eof)
-    {                           // char�I�Ɍq����ĂȂ��Ԃ͐ڑ��֎~ (!chrif_isconnect())
+    {  // char鯖に繋がってない間は接続禁止 (!chrif_isconnect())
         if (sd && sd->state.auth)
         {
             pc_logout (sd);
@@ -10447,12 +10452,12 @@ static int clif_parse (int fd)
 
     cmd = RFIFOW (fd, 0);
 
-    // �Ǘ��p�p�P�b�g����
+    // 管理用パケット処理 
     if (cmd >= 30000)
     {
         switch (cmd)
         {
-            case 0x7530:       // Athena���񏊓�
+            case 0x7530:       // Athena情報所得 
                 WFIFOW (fd, 0) = 0x7531;
                 WFIFOB (fd, 2) = ATHENA_MAJOR_VERSION;
                 WFIFOB (fd, 3) = ATHENA_MINOR_VERSION;
@@ -10464,7 +10469,7 @@ static int clif_parse (int fd)
                 WFIFOSET (fd, 10);
                 RFIFOSKIP (fd, 2);
                 break;
-            case 0x7532:       // �ڑ��̐ؒf
+            case 0x7532:       // 接続の切断 
                 session[fd]->eof = 1;
                 break;
         }
@@ -10473,7 +10478,7 @@ static int clif_parse (int fd)
     else if (cmd >= 0x200)
         return 0;
 
-    // �p�P�b�g�����v�Z
+     // パケット長を計算 
     packet_len = packet_len_table[cmd];
     if (packet_len == -1)
     {
@@ -10495,7 +10500,7 @@ static int clif_parse (int fd)
     }
 
     if (sd && sd->state.auth == 1 && sd->state.waitingdisconnect == 1)
-    {                           // �ؒf�҂��̏ꍇ�p�P�b�g������Ȃ�
+    {                           // 切断待ちの場合パケットを処理しない 
 
     }
     else if (clif_parse_func_table[cmd].func)
@@ -10511,7 +10516,7 @@ static int clif_parse (int fd)
     }
     else
     {
-        // �s���ȃp�P�b�g
+        // 不明なパケット 
         if (battle_config.error_log)
         {
             if (fd)
-- 
2.1.0

